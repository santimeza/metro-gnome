Running audio_synthesis.html will provide you the links to all 3 mini projects. From each of these you can navigate back to audio_synthesis to change page.
Alternatively, you could run each file individually to visit a specific page.

(Apologies in advance for messy code and bad practice. This is my first time coding in javascript/html  :)

-- CODE OVERVIEW --

All 3 projects use a buffer system very similar to the example programs provided. On pressing a key, or clicking start synthesis,
the buffer gets initialized and begins collecting samples. All programs have the option of 4 waveforms, these are generated by the
waveform generator functions. These all run using formulas found online:

Sine -     amp * sin(2pi * f * t)
Triangle - amp * 2 / Math.PI * asin(sin(phi))
Square-    amp * sign(sin(2pi * f * t))
Sawtooth-  amp * -2 / pi * atan(1 / tan(phi))


All programs use the 'phi system' like in the example programs. For the programs that play multiple tones at a time, converted phi into an array- phis- to preserve continuity. For these, a sum samples function is added to sum up the multiple signals into one. 


Note/frequency choice is handled by eventListeners that set frequencies and mute when a valid key is pressed and lifted respectively.
Again, apologies for the mess in this area, I am not to familiar with javascript (especially the whole tone triads). For diatonic chords,
frequencies are calculated at the beginning with respect to A 440, with equal temperment formulas and just intonation ratios. This program
also has a keyChange function that recalculates all frequency values when the user wants to change keys. All programs restrict the user to one
key press active at a time. I intended on having 4 programs, with the last being a virtual synth keyboard with 3 full octaves and 4-7 keypresses
allowed at a time, but it did not end up working out for me. I believe I would need to significantly clean and change large portions of the
existing code to make it work, but I hope to do this during spring break and also test out using built in audio functions and libraries which
should also make this process easier.

I hope you enjoy!


-Santi